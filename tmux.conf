# settings
set  -g  utf8
setw -g  utf8            on
set  -g  status-utf8     on
set  -g  default-command "reattach-to-user-namespace -l /bin/bash"
set  -g  history-limit   5000

# keys
setw -g  xterm-keys  on
setw -g  mode-keys   vi
set  -g  status-keys "emacs"

# prefix
unbind C-b
set -sg escape-time 1
set -g  prefix C-a
bind C-a send-prefix

# mouse
set -g mouse on

# Check state of the pane in which scroll occurred. If capturing mouse input or in
# copy-mode, forward scroll event to the pane. Else, enter copy-mode.
bind -n   WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "select-pane -t=; copy-mode -e"'
bind -n C-WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "select-pane -t=; copy-mode -e"'
bind -n   WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelDownPane select-pane -t= \; send-keys -M
bind -t vi-copy C-WheelUpPane halfpage-up
bind -t vi-copy C-WheelDownPane halfpage-down

# bindings
unbind  t   # time
bind    t   choose-tree
bind    R   refresh-client
bind    r   source-file ~/.tmux.conf \; display "Reloaded!"
bind    K   confirm-before -p "kill-session #S? (y/n)" kill-session
bind    h   set -q status
bind   C-n  next-window
bind   C-p  previous-window
bind   C-[  copy-mode

# pane manipulation
unbind    s    # tree
bind      s    split-window -v
bind      v    split-window -h
unbind    o    # next-pane
bind      o    resize-pane  -Z
bind     C-o   resize-pane  -Z
bind     C-h   select-pane  -L
bind     C-j   select-pane  -D
bind     C-k   select-pane  -U
bind     C-l   select-pane  -R
unbind  Space  # next-layout
bind    Space  if-shell '[ -z "${ALT_PANE_ZOOM+x}" ]' 'select-pane -t :.+; resize-pane -Z; set-environment ALT_PANE_ZOOM 1' 'set-environment -u ALT_PANE_ZOOM; last-pane'
bind   C-Space if-shell '[ -z "${ALT_PANE_ZOOM+x}" ]' 'select-pane -t :.+; resize-pane -Z; set-environment ALT_PANE_ZOOM 1' 'set-environment -u ALT_PANE_ZOOM; last-pane'
bind      N    next-layout

# copy mode
bind   -t vi-copy   v   begin-selection
unbind -t vi-copy Enter # copy
bind   -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind   -t vi-copy   y   copy-pipe "reattach-to-user-namespace pbcopy"

# quick splits
bind T split-window -h "htop"

# appearance
set  -g  default-terminal "screen-256color"
set  -g  display-time 2000
set  -g  message-bg            '#e7e7e7'
set  -g  message-fg            '#000000'
set  -g  pane-border-fg        '#909090'
set  -g  pane-active-border-fg '#909090'

# status
set  -g  status-justify left
set  -g  status-left ''
setw -g  window-status-format ' #I #W'
set  -g  status-right-length 50
if '[[ "$THEME" =~ dark ]]' 'set  -g status-bg colour233' \
                            'set  -g status-bg "#ffffff"'
if '[[ "$THEME" =~ dark ]]' 'set  -g status-fg "#565656"' \
                            'set  -g status-fg "#404040"'
if '[[ "$THEME" =~ dark ]]' 'set  -g status-attr dim' \
                            'set  -g status-attr bright'
if '[[ "$THEME" =~ dark ]]' 'setw -g window-status-current-format " #[fg=#ffffff]#I #W#[fg=default]"' \
                            'setw -g window-status-current-format " #[fg=#000000]#I #W#[fg=default]"'
if '[[ "$THEME" =~ dark ]]' "set  -g status-right \" #S #[fg=#9BD4FF]::#[fg=default] #h #[fg=#9BD4FF]::#[fg=default] #(sysctl vm.loadavg | cut -d ' ' -f 3-5) \"" \
                            "set  -g status-right \" #S #[fg=#000000]::#[fg=default] #h #[fg=#000000]::#[fg=default] #(sysctl vm.loadavg | cut -d ' ' -f 3-5) \""

# fix ssh-agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

